#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="dbQLSB")]
public partial class dbcsdlDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InserttbBill(tbBill instance);
  partial void UpdatetbBill(tbBill instance);
  partial void DeletetbBill(tbBill instance);
  partial void InserttbTransaction(tbTransaction instance);
  partial void UpdatetbTransaction(tbTransaction instance);
  partial void DeletetbTransaction(tbTransaction instance);
  partial void InserttbBookTime(tbBookTime instance);
  partial void UpdatetbBookTime(tbBookTime instance);
  partial void DeletetbBookTime(tbBookTime instance);
  partial void InserttbClothe(tbClothe instance);
  partial void UpdatetbClothe(tbClothe instance);
  partial void DeletetbClothe(tbClothe instance);
  partial void InserttbDrink(tbDrink instance);
  partial void UpdatetbDrink(tbDrink instance);
  partial void DeletetbDrink(tbDrink instance);
  partial void InserttbField(tbField instance);
  partial void UpdatetbField(tbField instance);
  partial void DeletetbField(tbField instance);
  partial void InserttbFieldType(tbFieldType instance);
  partial void UpdatetbFieldType(tbFieldType instance);
  partial void DeletetbFieldType(tbFieldType instance);
  partial void InserttbGroupUser(tbGroupUser instance);
  partial void UpdatetbGroupUser(tbGroupUser instance);
  partial void DeletetbGroupUser(tbGroupUser instance);
  partial void InserttbPrice(tbPrice instance);
  partial void UpdatetbPrice(tbPrice instance);
  partial void DeletetbPrice(tbPrice instance);
  partial void InserttbShoe(tbShoe instance);
  partial void UpdatetbShoe(tbShoe instance);
  partial void DeletetbShoe(tbShoe instance);
  partial void InserttbTempTransactionAdmin(tbTempTransactionAdmin instance);
  partial void UpdatetbTempTransactionAdmin(tbTempTransactionAdmin instance);
  partial void DeletetbTempTransactionAdmin(tbTempTransactionAdmin instance);
  partial void InserttbTempTransactionCustomer(tbTempTransactionCustomer instance);
  partial void UpdatetbTempTransactionCustomer(tbTempTransactionCustomer instance);
  partial void DeletetbTempTransactionCustomer(tbTempTransactionCustomer instance);
  partial void InserttbUser(tbUser instance);
  partial void UpdatetbUser(tbUser instance);
  partial void DeletetbUser(tbUser instance);
  #endregion
	
	public dbcsdlDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["dbQLSBConnectionString1"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public dbcsdlDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public dbcsdlDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public dbcsdlDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public dbcsdlDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<tbBill> tbBills
	{
		get
		{
			return this.GetTable<tbBill>();
		}
	}
	
	public System.Data.Linq.Table<tbTransaction> tbTransactions
	{
		get
		{
			return this.GetTable<tbTransaction>();
		}
	}
	
	public System.Data.Linq.Table<tbBookTime> tbBookTimes
	{
		get
		{
			return this.GetTable<tbBookTime>();
		}
	}
	
	public System.Data.Linq.Table<tbClothe> tbClothes
	{
		get
		{
			return this.GetTable<tbClothe>();
		}
	}
	
	public System.Data.Linq.Table<tbDrink> tbDrinks
	{
		get
		{
			return this.GetTable<tbDrink>();
		}
	}
	
	public System.Data.Linq.Table<tbField> tbFields
	{
		get
		{
			return this.GetTable<tbField>();
		}
	}
	
	public System.Data.Linq.Table<tbFieldType> tbFieldTypes
	{
		get
		{
			return this.GetTable<tbFieldType>();
		}
	}
	
	public System.Data.Linq.Table<tbGroupUser> tbGroupUsers
	{
		get
		{
			return this.GetTable<tbGroupUser>();
		}
	}
	
	public System.Data.Linq.Table<tbPrice> tbPrices
	{
		get
		{
			return this.GetTable<tbPrice>();
		}
	}
	
	public System.Data.Linq.Table<tbShoe> tbShoes
	{
		get
		{
			return this.GetTable<tbShoe>();
		}
	}
	
	public System.Data.Linq.Table<tbTempTransactionAdmin> tbTempTransactionAdmins
	{
		get
		{
			return this.GetTable<tbTempTransactionAdmin>();
		}
	}
	
	public System.Data.Linq.Table<tbTempTransactionCustomer> tbTempTransactionCustomers
	{
		get
		{
			return this.GetTable<tbTempTransactionCustomer>();
		}
	}
	
	public System.Data.Linq.Table<tbUser> tbUsers
	{
		get
		{
			return this.GetTable<tbUser>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbBill")]
public partial class tbBill : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _bill_id;
	
	private System.Nullable<int> _users_id;
	
	private string _drinks_id;
	
	private string _clothes_id;
	
	private string _shoes_id;
	
	private System.Nullable<int> _drinks_quantity;
	
	private System.Nullable<int> _clothes_quantity;
	
	private System.Nullable<int> _shoes_quantity;
	
	private System.Nullable<System.DateTime> _date_create;
	
	private EntityRef<tbClothe> _tbClothe;
	
	private EntityRef<tbDrink> _tbDrink;
	
	private EntityRef<tbShoe> _tbShoe;
	
	private EntityRef<tbUser> _tbUser;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onbill_idChanging(int value);
    partial void Onbill_idChanged();
    partial void Onusers_idChanging(System.Nullable<int> value);
    partial void Onusers_idChanged();
    partial void Ondrinks_idChanging(string value);
    partial void Ondrinks_idChanged();
    partial void Onclothes_idChanging(string value);
    partial void Onclothes_idChanged();
    partial void Onshoes_idChanging(string value);
    partial void Onshoes_idChanged();
    partial void Ondrinks_quantityChanging(System.Nullable<int> value);
    partial void Ondrinks_quantityChanged();
    partial void Onclothes_quantityChanging(System.Nullable<int> value);
    partial void Onclothes_quantityChanged();
    partial void Onshoes_quantityChanging(System.Nullable<int> value);
    partial void Onshoes_quantityChanged();
    partial void Ondate_createChanging(System.Nullable<System.DateTime> value);
    partial void Ondate_createChanged();
    #endregion
	
	public tbBill()
	{
		this._tbClothe = default(EntityRef<tbClothe>);
		this._tbDrink = default(EntityRef<tbDrink>);
		this._tbShoe = default(EntityRef<tbShoe>);
		this._tbUser = default(EntityRef<tbUser>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bill_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int bill_id
	{
		get
		{
			return this._bill_id;
		}
		set
		{
			if ((this._bill_id != value))
			{
				this.Onbill_idChanging(value);
				this.SendPropertyChanging();
				this._bill_id = value;
				this.SendPropertyChanged("bill_id");
				this.Onbill_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_users_id", DbType="Int")]
	public System.Nullable<int> users_id
	{
		get
		{
			return this._users_id;
		}
		set
		{
			if ((this._users_id != value))
			{
				if (this._tbUser.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onusers_idChanging(value);
				this.SendPropertyChanging();
				this._users_id = value;
				this.SendPropertyChanged("users_id");
				this.Onusers_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drinks_id", DbType="VarChar(50)")]
	public string drinks_id
	{
		get
		{
			return this._drinks_id;
		}
		set
		{
			if ((this._drinks_id != value))
			{
				if (this._tbDrink.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Ondrinks_idChanging(value);
				this.SendPropertyChanging();
				this._drinks_id = value;
				this.SendPropertyChanged("drinks_id");
				this.Ondrinks_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clothes_id", DbType="VarChar(50)")]
	public string clothes_id
	{
		get
		{
			return this._clothes_id;
		}
		set
		{
			if ((this._clothes_id != value))
			{
				if (this._tbClothe.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onclothes_idChanging(value);
				this.SendPropertyChanging();
				this._clothes_id = value;
				this.SendPropertyChanged("clothes_id");
				this.Onclothes_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shoes_id", DbType="VarChar(50)")]
	public string shoes_id
	{
		get
		{
			return this._shoes_id;
		}
		set
		{
			if ((this._shoes_id != value))
			{
				if (this._tbShoe.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onshoes_idChanging(value);
				this.SendPropertyChanging();
				this._shoes_id = value;
				this.SendPropertyChanged("shoes_id");
				this.Onshoes_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drinks_quantity", DbType="Int")]
	public System.Nullable<int> drinks_quantity
	{
		get
		{
			return this._drinks_quantity;
		}
		set
		{
			if ((this._drinks_quantity != value))
			{
				this.Ondrinks_quantityChanging(value);
				this.SendPropertyChanging();
				this._drinks_quantity = value;
				this.SendPropertyChanged("drinks_quantity");
				this.Ondrinks_quantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clothes_quantity", DbType="Int")]
	public System.Nullable<int> clothes_quantity
	{
		get
		{
			return this._clothes_quantity;
		}
		set
		{
			if ((this._clothes_quantity != value))
			{
				this.Onclothes_quantityChanging(value);
				this.SendPropertyChanging();
				this._clothes_quantity = value;
				this.SendPropertyChanged("clothes_quantity");
				this.Onclothes_quantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shoes_quantity", DbType="Int")]
	public System.Nullable<int> shoes_quantity
	{
		get
		{
			return this._shoes_quantity;
		}
		set
		{
			if ((this._shoes_quantity != value))
			{
				this.Onshoes_quantityChanging(value);
				this.SendPropertyChanging();
				this._shoes_quantity = value;
				this.SendPropertyChanged("shoes_quantity");
				this.Onshoes_quantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_create", DbType="Date")]
	public System.Nullable<System.DateTime> date_create
	{
		get
		{
			return this._date_create;
		}
		set
		{
			if ((this._date_create != value))
			{
				this.Ondate_createChanging(value);
				this.SendPropertyChanging();
				this._date_create = value;
				this.SendPropertyChanged("date_create");
				this.Ondate_createChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbClothe_tbBill", Storage="_tbClothe", ThisKey="clothes_id", OtherKey="clothes_id", IsForeignKey=true)]
	public tbClothe tbClothe
	{
		get
		{
			return this._tbClothe.Entity;
		}
		set
		{
			tbClothe previousValue = this._tbClothe.Entity;
			if (((previousValue != value) 
						|| (this._tbClothe.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tbClothe.Entity = null;
					previousValue.tbBills.Remove(this);
				}
				this._tbClothe.Entity = value;
				if ((value != null))
				{
					value.tbBills.Add(this);
					this._clothes_id = value.clothes_id;
				}
				else
				{
					this._clothes_id = default(string);
				}
				this.SendPropertyChanged("tbClothe");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbDrink_tbBill", Storage="_tbDrink", ThisKey="drinks_id", OtherKey="drinks_id", IsForeignKey=true)]
	public tbDrink tbDrink
	{
		get
		{
			return this._tbDrink.Entity;
		}
		set
		{
			tbDrink previousValue = this._tbDrink.Entity;
			if (((previousValue != value) 
						|| (this._tbDrink.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tbDrink.Entity = null;
					previousValue.tbBills.Remove(this);
				}
				this._tbDrink.Entity = value;
				if ((value != null))
				{
					value.tbBills.Add(this);
					this._drinks_id = value.drinks_id;
				}
				else
				{
					this._drinks_id = default(string);
				}
				this.SendPropertyChanged("tbDrink");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbShoe_tbBill", Storage="_tbShoe", ThisKey="shoes_id", OtherKey="shoes_id", IsForeignKey=true)]
	public tbShoe tbShoe
	{
		get
		{
			return this._tbShoe.Entity;
		}
		set
		{
			tbShoe previousValue = this._tbShoe.Entity;
			if (((previousValue != value) 
						|| (this._tbShoe.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tbShoe.Entity = null;
					previousValue.tbBills.Remove(this);
				}
				this._tbShoe.Entity = value;
				if ((value != null))
				{
					value.tbBills.Add(this);
					this._shoes_id = value.shoes_id;
				}
				else
				{
					this._shoes_id = default(string);
				}
				this.SendPropertyChanged("tbShoe");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbUser_tbBill", Storage="_tbUser", ThisKey="users_id", OtherKey="users_id", IsForeignKey=true)]
	public tbUser tbUser
	{
		get
		{
			return this._tbUser.Entity;
		}
		set
		{
			tbUser previousValue = this._tbUser.Entity;
			if (((previousValue != value) 
						|| (this._tbUser.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tbUser.Entity = null;
					previousValue.tbBills.Remove(this);
				}
				this._tbUser.Entity = value;
				if ((value != null))
				{
					value.tbBills.Add(this);
					this._users_id = value.users_id;
				}
				else
				{
					this._users_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("tbUser");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbTransaction")]
public partial class tbTransaction : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _transaction_id;
	
	private System.Nullable<int> _temp_transaction_id;
	
	private System.Nullable<int> _transaction_status;
	
	private System.Nullable<System.DateTime> _transaction_datetime;
	
	private System.Nullable<decimal> _price;
	
	private EntityRef<tbTempTransactionAdmin> _tbTempTransactionAdmin;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontransaction_idChanging(int value);
    partial void Ontransaction_idChanged();
    partial void Ontemp_transaction_idChanging(System.Nullable<int> value);
    partial void Ontemp_transaction_idChanged();
    partial void Ontransaction_statusChanging(System.Nullable<int> value);
    partial void Ontransaction_statusChanged();
    partial void Ontransaction_datetimeChanging(System.Nullable<System.DateTime> value);
    partial void Ontransaction_datetimeChanged();
    partial void OnpriceChanging(System.Nullable<decimal> value);
    partial void OnpriceChanged();
    #endregion
	
	public tbTransaction()
	{
		this._tbTempTransactionAdmin = default(EntityRef<tbTempTransactionAdmin>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transaction_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int transaction_id
	{
		get
		{
			return this._transaction_id;
		}
		set
		{
			if ((this._transaction_id != value))
			{
				this.Ontransaction_idChanging(value);
				this.SendPropertyChanging();
				this._transaction_id = value;
				this.SendPropertyChanged("transaction_id");
				this.Ontransaction_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_temp_transaction_id", DbType="Int")]
	public System.Nullable<int> temp_transaction_id
	{
		get
		{
			return this._temp_transaction_id;
		}
		set
		{
			if ((this._temp_transaction_id != value))
			{
				if (this._tbTempTransactionAdmin.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Ontemp_transaction_idChanging(value);
				this.SendPropertyChanging();
				this._temp_transaction_id = value;
				this.SendPropertyChanged("temp_transaction_id");
				this.Ontemp_transaction_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transaction_status", DbType="Int")]
	public System.Nullable<int> transaction_status
	{
		get
		{
			return this._transaction_status;
		}
		set
		{
			if ((this._transaction_status != value))
			{
				this.Ontransaction_statusChanging(value);
				this.SendPropertyChanging();
				this._transaction_status = value;
				this.SendPropertyChanged("transaction_status");
				this.Ontransaction_statusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transaction_datetime", DbType="DateTime")]
	public System.Nullable<System.DateTime> transaction_datetime
	{
		get
		{
			return this._transaction_datetime;
		}
		set
		{
			if ((this._transaction_datetime != value))
			{
				this.Ontransaction_datetimeChanging(value);
				this.SendPropertyChanging();
				this._transaction_datetime = value;
				this.SendPropertyChanged("transaction_datetime");
				this.Ontransaction_datetimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Money")]
	public System.Nullable<decimal> price
	{
		get
		{
			return this._price;
		}
		set
		{
			if ((this._price != value))
			{
				this.OnpriceChanging(value);
				this.SendPropertyChanging();
				this._price = value;
				this.SendPropertyChanged("price");
				this.OnpriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbTempTransactionAdmin_tbTransaction", Storage="_tbTempTransactionAdmin", ThisKey="temp_transaction_id", OtherKey="temp_transaction_id", IsForeignKey=true, DeleteRule="CASCADE")]
	public tbTempTransactionAdmin tbTempTransactionAdmin
	{
		get
		{
			return this._tbTempTransactionAdmin.Entity;
		}
		set
		{
			tbTempTransactionAdmin previousValue = this._tbTempTransactionAdmin.Entity;
			if (((previousValue != value) 
						|| (this._tbTempTransactionAdmin.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tbTempTransactionAdmin.Entity = null;
					previousValue.tbTransactions.Remove(this);
				}
				this._tbTempTransactionAdmin.Entity = value;
				if ((value != null))
				{
					value.tbTransactions.Add(this);
					this._temp_transaction_id = value.temp_transaction_id;
				}
				else
				{
					this._temp_transaction_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("tbTempTransactionAdmin");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbBookTime")]
public partial class tbBookTime : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _book_time_id;
	
	private string _book_time_detail;
	
	private EntitySet<tbPrice> _tbPrices;
	
	private EntitySet<tbTempTransactionAdmin> _tbTempTransactionAdmins;
	
	private EntitySet<tbTempTransactionCustomer> _tbTempTransactionCustomers;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onbook_time_idChanging(int value);
    partial void Onbook_time_idChanged();
    partial void Onbook_time_detailChanging(string value);
    partial void Onbook_time_detailChanged();
    #endregion
	
	public tbBookTime()
	{
		this._tbPrices = new EntitySet<tbPrice>(new Action<tbPrice>(this.attach_tbPrices), new Action<tbPrice>(this.detach_tbPrices));
		this._tbTempTransactionAdmins = new EntitySet<tbTempTransactionAdmin>(new Action<tbTempTransactionAdmin>(this.attach_tbTempTransactionAdmins), new Action<tbTempTransactionAdmin>(this.detach_tbTempTransactionAdmins));
		this._tbTempTransactionCustomers = new EntitySet<tbTempTransactionCustomer>(new Action<tbTempTransactionCustomer>(this.attach_tbTempTransactionCustomers), new Action<tbTempTransactionCustomer>(this.detach_tbTempTransactionCustomers));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_time_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int book_time_id
	{
		get
		{
			return this._book_time_id;
		}
		set
		{
			if ((this._book_time_id != value))
			{
				this.Onbook_time_idChanging(value);
				this.SendPropertyChanging();
				this._book_time_id = value;
				this.SendPropertyChanged("book_time_id");
				this.Onbook_time_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_time_detail", DbType="VarChar(MAX)")]
	public string book_time_detail
	{
		get
		{
			return this._book_time_detail;
		}
		set
		{
			if ((this._book_time_detail != value))
			{
				this.Onbook_time_detailChanging(value);
				this.SendPropertyChanging();
				this._book_time_detail = value;
				this.SendPropertyChanged("book_time_detail");
				this.Onbook_time_detailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbBookTime_tbPrice", Storage="_tbPrices", ThisKey="book_time_id", OtherKey="book_time_id")]
	public EntitySet<tbPrice> tbPrices
	{
		get
		{
			return this._tbPrices;
		}
		set
		{
			this._tbPrices.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbBookTime_tbTempTransactionAdmin", Storage="_tbTempTransactionAdmins", ThisKey="book_time_id", OtherKey="book_time_id")]
	public EntitySet<tbTempTransactionAdmin> tbTempTransactionAdmins
	{
		get
		{
			return this._tbTempTransactionAdmins;
		}
		set
		{
			this._tbTempTransactionAdmins.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbBookTime_tbTempTransactionCustomer", Storage="_tbTempTransactionCustomers", ThisKey="book_time_id", OtherKey="book_time_id")]
	public EntitySet<tbTempTransactionCustomer> tbTempTransactionCustomers
	{
		get
		{
			return this._tbTempTransactionCustomers;
		}
		set
		{
			this._tbTempTransactionCustomers.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_tbPrices(tbPrice entity)
	{
		this.SendPropertyChanging();
		entity.tbBookTime = this;
	}
	
	private void detach_tbPrices(tbPrice entity)
	{
		this.SendPropertyChanging();
		entity.tbBookTime = null;
	}
	
	private void attach_tbTempTransactionAdmins(tbTempTransactionAdmin entity)
	{
		this.SendPropertyChanging();
		entity.tbBookTime = this;
	}
	
	private void detach_tbTempTransactionAdmins(tbTempTransactionAdmin entity)
	{
		this.SendPropertyChanging();
		entity.tbBookTime = null;
	}
	
	private void attach_tbTempTransactionCustomers(tbTempTransactionCustomer entity)
	{
		this.SendPropertyChanging();
		entity.tbBookTime = this;
	}
	
	private void detach_tbTempTransactionCustomers(tbTempTransactionCustomer entity)
	{
		this.SendPropertyChanging();
		entity.tbBookTime = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbClothes")]
public partial class tbClothe : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _clothes_id;
	
	private string _clothes_name;
	
	private System.Nullable<decimal> _clothes_price;
	
	private string _clothes_size;
	
	private string _clothes_color;
	
	private string _clothes_description;
	
	private string _picture;
	
	private System.Nullable<int> _quantity;
	
	private EntitySet<tbBill> _tbBills;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onclothes_idChanging(string value);
    partial void Onclothes_idChanged();
    partial void Onclothes_nameChanging(string value);
    partial void Onclothes_nameChanged();
    partial void Onclothes_priceChanging(System.Nullable<decimal> value);
    partial void Onclothes_priceChanged();
    partial void Onclothes_sizeChanging(string value);
    partial void Onclothes_sizeChanged();
    partial void Onclothes_colorChanging(string value);
    partial void Onclothes_colorChanged();
    partial void Onclothes_descriptionChanging(string value);
    partial void Onclothes_descriptionChanged();
    partial void OnpictureChanging(string value);
    partial void OnpictureChanged();
    partial void OnquantityChanging(System.Nullable<int> value);
    partial void OnquantityChanged();
    #endregion
	
	public tbClothe()
	{
		this._tbBills = new EntitySet<tbBill>(new Action<tbBill>(this.attach_tbBills), new Action<tbBill>(this.detach_tbBills));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clothes_id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string clothes_id
	{
		get
		{
			return this._clothes_id;
		}
		set
		{
			if ((this._clothes_id != value))
			{
				this.Onclothes_idChanging(value);
				this.SendPropertyChanging();
				this._clothes_id = value;
				this.SendPropertyChanged("clothes_id");
				this.Onclothes_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clothes_name", DbType="NVarChar(MAX)")]
	public string clothes_name
	{
		get
		{
			return this._clothes_name;
		}
		set
		{
			if ((this._clothes_name != value))
			{
				this.Onclothes_nameChanging(value);
				this.SendPropertyChanging();
				this._clothes_name = value;
				this.SendPropertyChanged("clothes_name");
				this.Onclothes_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clothes_price", DbType="Money")]
	public System.Nullable<decimal> clothes_price
	{
		get
		{
			return this._clothes_price;
		}
		set
		{
			if ((this._clothes_price != value))
			{
				this.Onclothes_priceChanging(value);
				this.SendPropertyChanging();
				this._clothes_price = value;
				this.SendPropertyChanged("clothes_price");
				this.Onclothes_priceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clothes_size", DbType="NChar(5)")]
	public string clothes_size
	{
		get
		{
			return this._clothes_size;
		}
		set
		{
			if ((this._clothes_size != value))
			{
				this.Onclothes_sizeChanging(value);
				this.SendPropertyChanging();
				this._clothes_size = value;
				this.SendPropertyChanged("clothes_size");
				this.Onclothes_sizeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clothes_color", DbType="NVarChar(MAX)")]
	public string clothes_color
	{
		get
		{
			return this._clothes_color;
		}
		set
		{
			if ((this._clothes_color != value))
			{
				this.Onclothes_colorChanging(value);
				this.SendPropertyChanging();
				this._clothes_color = value;
				this.SendPropertyChanged("clothes_color");
				this.Onclothes_colorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clothes_description", DbType="NVarChar(MAX)")]
	public string clothes_description
	{
		get
		{
			return this._clothes_description;
		}
		set
		{
			if ((this._clothes_description != value))
			{
				this.Onclothes_descriptionChanging(value);
				this.SendPropertyChanging();
				this._clothes_description = value;
				this.SendPropertyChanged("clothes_description");
				this.Onclothes_descriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_picture", DbType="NVarChar(MAX)")]
	public string picture
	{
		get
		{
			return this._picture;
		}
		set
		{
			if ((this._picture != value))
			{
				this.OnpictureChanging(value);
				this.SendPropertyChanging();
				this._picture = value;
				this.SendPropertyChanged("picture");
				this.OnpictureChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int")]
	public System.Nullable<int> quantity
	{
		get
		{
			return this._quantity;
		}
		set
		{
			if ((this._quantity != value))
			{
				this.OnquantityChanging(value);
				this.SendPropertyChanging();
				this._quantity = value;
				this.SendPropertyChanged("quantity");
				this.OnquantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbClothe_tbBill", Storage="_tbBills", ThisKey="clothes_id", OtherKey="clothes_id")]
	public EntitySet<tbBill> tbBills
	{
		get
		{
			return this._tbBills;
		}
		set
		{
			this._tbBills.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_tbBills(tbBill entity)
	{
		this.SendPropertyChanging();
		entity.tbClothe = this;
	}
	
	private void detach_tbBills(tbBill entity)
	{
		this.SendPropertyChanging();
		entity.tbClothe = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbDrinks")]
public partial class tbDrink : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _drinks_id;
	
	private string _drinks_name;
	
	private System.Nullable<decimal> _drinks_price;
	
	private string _drinks_description;
	
	private string _picture;
	
	private System.Nullable<int> _quantity;
	
	private EntitySet<tbBill> _tbBills;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ondrinks_idChanging(string value);
    partial void Ondrinks_idChanged();
    partial void Ondrinks_nameChanging(string value);
    partial void Ondrinks_nameChanged();
    partial void Ondrinks_priceChanging(System.Nullable<decimal> value);
    partial void Ondrinks_priceChanged();
    partial void Ondrinks_descriptionChanging(string value);
    partial void Ondrinks_descriptionChanged();
    partial void OnpictureChanging(string value);
    partial void OnpictureChanged();
    partial void OnquantityChanging(System.Nullable<int> value);
    partial void OnquantityChanged();
    #endregion
	
	public tbDrink()
	{
		this._tbBills = new EntitySet<tbBill>(new Action<tbBill>(this.attach_tbBills), new Action<tbBill>(this.detach_tbBills));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drinks_id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string drinks_id
	{
		get
		{
			return this._drinks_id;
		}
		set
		{
			if ((this._drinks_id != value))
			{
				this.Ondrinks_idChanging(value);
				this.SendPropertyChanging();
				this._drinks_id = value;
				this.SendPropertyChanged("drinks_id");
				this.Ondrinks_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drinks_name", DbType="NVarChar(MAX)")]
	public string drinks_name
	{
		get
		{
			return this._drinks_name;
		}
		set
		{
			if ((this._drinks_name != value))
			{
				this.Ondrinks_nameChanging(value);
				this.SendPropertyChanging();
				this._drinks_name = value;
				this.SendPropertyChanged("drinks_name");
				this.Ondrinks_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drinks_price", DbType="Money")]
	public System.Nullable<decimal> drinks_price
	{
		get
		{
			return this._drinks_price;
		}
		set
		{
			if ((this._drinks_price != value))
			{
				this.Ondrinks_priceChanging(value);
				this.SendPropertyChanging();
				this._drinks_price = value;
				this.SendPropertyChanged("drinks_price");
				this.Ondrinks_priceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_drinks_description", DbType="NVarChar(MAX)")]
	public string drinks_description
	{
		get
		{
			return this._drinks_description;
		}
		set
		{
			if ((this._drinks_description != value))
			{
				this.Ondrinks_descriptionChanging(value);
				this.SendPropertyChanging();
				this._drinks_description = value;
				this.SendPropertyChanged("drinks_description");
				this.Ondrinks_descriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_picture", DbType="NVarChar(MAX)")]
	public string picture
	{
		get
		{
			return this._picture;
		}
		set
		{
			if ((this._picture != value))
			{
				this.OnpictureChanging(value);
				this.SendPropertyChanging();
				this._picture = value;
				this.SendPropertyChanged("picture");
				this.OnpictureChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int")]
	public System.Nullable<int> quantity
	{
		get
		{
			return this._quantity;
		}
		set
		{
			if ((this._quantity != value))
			{
				this.OnquantityChanging(value);
				this.SendPropertyChanging();
				this._quantity = value;
				this.SendPropertyChanged("quantity");
				this.OnquantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbDrink_tbBill", Storage="_tbBills", ThisKey="drinks_id", OtherKey="drinks_id")]
	public EntitySet<tbBill> tbBills
	{
		get
		{
			return this._tbBills;
		}
		set
		{
			this._tbBills.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_tbBills(tbBill entity)
	{
		this.SendPropertyChanging();
		entity.tbDrink = this;
	}
	
	private void detach_tbBills(tbBill entity)
	{
		this.SendPropertyChanging();
		entity.tbDrink = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbField")]
public partial class tbField : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _field_id;
	
	private string _field_name;
	
	private System.Nullable<int> _field_type_id;
	
	private System.Nullable<bool> _field_status;
	
	private EntitySet<tbTempTransactionAdmin> _tbTempTransactionAdmins;
	
	private EntitySet<tbTempTransactionCustomer> _tbTempTransactionCustomers;
	
	private EntityRef<tbFieldType> _tbFieldType;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onfield_idChanging(int value);
    partial void Onfield_idChanged();
    partial void Onfield_nameChanging(string value);
    partial void Onfield_nameChanged();
    partial void Onfield_type_idChanging(System.Nullable<int> value);
    partial void Onfield_type_idChanged();
    partial void Onfield_statusChanging(System.Nullable<bool> value);
    partial void Onfield_statusChanged();
    #endregion
	
	public tbField()
	{
		this._tbTempTransactionAdmins = new EntitySet<tbTempTransactionAdmin>(new Action<tbTempTransactionAdmin>(this.attach_tbTempTransactionAdmins), new Action<tbTempTransactionAdmin>(this.detach_tbTempTransactionAdmins));
		this._tbTempTransactionCustomers = new EntitySet<tbTempTransactionCustomer>(new Action<tbTempTransactionCustomer>(this.attach_tbTempTransactionCustomers), new Action<tbTempTransactionCustomer>(this.detach_tbTempTransactionCustomers));
		this._tbFieldType = default(EntityRef<tbFieldType>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_field_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int field_id
	{
		get
		{
			return this._field_id;
		}
		set
		{
			if ((this._field_id != value))
			{
				this.Onfield_idChanging(value);
				this.SendPropertyChanging();
				this._field_id = value;
				this.SendPropertyChanged("field_id");
				this.Onfield_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_field_name", DbType="NVarChar(MAX)")]
	public string field_name
	{
		get
		{
			return this._field_name;
		}
		set
		{
			if ((this._field_name != value))
			{
				this.Onfield_nameChanging(value);
				this.SendPropertyChanging();
				this._field_name = value;
				this.SendPropertyChanged("field_name");
				this.Onfield_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_field_type_id", DbType="Int")]
	public System.Nullable<int> field_type_id
	{
		get
		{
			return this._field_type_id;
		}
		set
		{
			if ((this._field_type_id != value))
			{
				if (this._tbFieldType.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onfield_type_idChanging(value);
				this.SendPropertyChanging();
				this._field_type_id = value;
				this.SendPropertyChanged("field_type_id");
				this.Onfield_type_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_field_status", DbType="Bit")]
	public System.Nullable<bool> field_status
	{
		get
		{
			return this._field_status;
		}
		set
		{
			if ((this._field_status != value))
			{
				this.Onfield_statusChanging(value);
				this.SendPropertyChanging();
				this._field_status = value;
				this.SendPropertyChanged("field_status");
				this.Onfield_statusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbField_tbTempTransactionAdmin", Storage="_tbTempTransactionAdmins", ThisKey="field_id", OtherKey="field_id")]
	public EntitySet<tbTempTransactionAdmin> tbTempTransactionAdmins
	{
		get
		{
			return this._tbTempTransactionAdmins;
		}
		set
		{
			this._tbTempTransactionAdmins.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbField_tbTempTransactionCustomer", Storage="_tbTempTransactionCustomers", ThisKey="field_id", OtherKey="field_id")]
	public EntitySet<tbTempTransactionCustomer> tbTempTransactionCustomers
	{
		get
		{
			return this._tbTempTransactionCustomers;
		}
		set
		{
			this._tbTempTransactionCustomers.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbFieldType_tbField", Storage="_tbFieldType", ThisKey="field_type_id", OtherKey="field_type_id", IsForeignKey=true, DeleteRule="CASCADE")]
	public tbFieldType tbFieldType
	{
		get
		{
			return this._tbFieldType.Entity;
		}
		set
		{
			tbFieldType previousValue = this._tbFieldType.Entity;
			if (((previousValue != value) 
						|| (this._tbFieldType.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tbFieldType.Entity = null;
					previousValue.tbFields.Remove(this);
				}
				this._tbFieldType.Entity = value;
				if ((value != null))
				{
					value.tbFields.Add(this);
					this._field_type_id = value.field_type_id;
				}
				else
				{
					this._field_type_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("tbFieldType");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_tbTempTransactionAdmins(tbTempTransactionAdmin entity)
	{
		this.SendPropertyChanging();
		entity.tbField = this;
	}
	
	private void detach_tbTempTransactionAdmins(tbTempTransactionAdmin entity)
	{
		this.SendPropertyChanging();
		entity.tbField = null;
	}
	
	private void attach_tbTempTransactionCustomers(tbTempTransactionCustomer entity)
	{
		this.SendPropertyChanging();
		entity.tbField = this;
	}
	
	private void detach_tbTempTransactionCustomers(tbTempTransactionCustomer entity)
	{
		this.SendPropertyChanging();
		entity.tbField = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbFieldType")]
public partial class tbFieldType : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _field_type_id;
	
	private string _field_type_name;
	
	private EntitySet<tbField> _tbFields;
	
	private EntitySet<tbPrice> _tbPrices;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onfield_type_idChanging(int value);
    partial void Onfield_type_idChanged();
    partial void Onfield_type_nameChanging(string value);
    partial void Onfield_type_nameChanged();
    #endregion
	
	public tbFieldType()
	{
		this._tbFields = new EntitySet<tbField>(new Action<tbField>(this.attach_tbFields), new Action<tbField>(this.detach_tbFields));
		this._tbPrices = new EntitySet<tbPrice>(new Action<tbPrice>(this.attach_tbPrices), new Action<tbPrice>(this.detach_tbPrices));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_field_type_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int field_type_id
	{
		get
		{
			return this._field_type_id;
		}
		set
		{
			if ((this._field_type_id != value))
			{
				this.Onfield_type_idChanging(value);
				this.SendPropertyChanging();
				this._field_type_id = value;
				this.SendPropertyChanged("field_type_id");
				this.Onfield_type_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_field_type_name", DbType="NVarChar(MAX)")]
	public string field_type_name
	{
		get
		{
			return this._field_type_name;
		}
		set
		{
			if ((this._field_type_name != value))
			{
				this.Onfield_type_nameChanging(value);
				this.SendPropertyChanging();
				this._field_type_name = value;
				this.SendPropertyChanged("field_type_name");
				this.Onfield_type_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbFieldType_tbField", Storage="_tbFields", ThisKey="field_type_id", OtherKey="field_type_id")]
	public EntitySet<tbField> tbFields
	{
		get
		{
			return this._tbFields;
		}
		set
		{
			this._tbFields.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbFieldType_tbPrice", Storage="_tbPrices", ThisKey="field_type_id", OtherKey="field_type_id")]
	public EntitySet<tbPrice> tbPrices
	{
		get
		{
			return this._tbPrices;
		}
		set
		{
			this._tbPrices.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_tbFields(tbField entity)
	{
		this.SendPropertyChanging();
		entity.tbFieldType = this;
	}
	
	private void detach_tbFields(tbField entity)
	{
		this.SendPropertyChanging();
		entity.tbFieldType = null;
	}
	
	private void attach_tbPrices(tbPrice entity)
	{
		this.SendPropertyChanging();
		entity.tbFieldType = this;
	}
	
	private void detach_tbPrices(tbPrice entity)
	{
		this.SendPropertyChanging();
		entity.tbFieldType = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbGroupUser")]
public partial class tbGroupUser : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _group_user_id;
	
	private string _group_user_name;
	
	private System.Nullable<bool> _group_user_status;
	
	private EntitySet<tbUser> _tbUsers;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ongroup_user_idChanging(int value);
    partial void Ongroup_user_idChanged();
    partial void Ongroup_user_nameChanging(string value);
    partial void Ongroup_user_nameChanged();
    partial void Ongroup_user_statusChanging(System.Nullable<bool> value);
    partial void Ongroup_user_statusChanged();
    #endregion
	
	public tbGroupUser()
	{
		this._tbUsers = new EntitySet<tbUser>(new Action<tbUser>(this.attach_tbUsers), new Action<tbUser>(this.detach_tbUsers));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_group_user_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int group_user_id
	{
		get
		{
			return this._group_user_id;
		}
		set
		{
			if ((this._group_user_id != value))
			{
				this.Ongroup_user_idChanging(value);
				this.SendPropertyChanging();
				this._group_user_id = value;
				this.SendPropertyChanged("group_user_id");
				this.Ongroup_user_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_group_user_name", DbType="NVarChar(50)")]
	public string group_user_name
	{
		get
		{
			return this._group_user_name;
		}
		set
		{
			if ((this._group_user_name != value))
			{
				this.Ongroup_user_nameChanging(value);
				this.SendPropertyChanging();
				this._group_user_name = value;
				this.SendPropertyChanged("group_user_name");
				this.Ongroup_user_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_group_user_status", DbType="Bit")]
	public System.Nullable<bool> group_user_status
	{
		get
		{
			return this._group_user_status;
		}
		set
		{
			if ((this._group_user_status != value))
			{
				this.Ongroup_user_statusChanging(value);
				this.SendPropertyChanging();
				this._group_user_status = value;
				this.SendPropertyChanged("group_user_status");
				this.Ongroup_user_statusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbGroupUser_tbUser", Storage="_tbUsers", ThisKey="group_user_id", OtherKey="group_user_id")]
	public EntitySet<tbUser> tbUsers
	{
		get
		{
			return this._tbUsers;
		}
		set
		{
			this._tbUsers.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_tbUsers(tbUser entity)
	{
		this.SendPropertyChanging();
		entity.tbGroupUser = this;
	}
	
	private void detach_tbUsers(tbUser entity)
	{
		this.SendPropertyChanging();
		entity.tbGroupUser = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbPrice")]
public partial class tbPrice : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _price_id;
	
	private System.Nullable<int> _field_type_id;
	
	private System.Nullable<int> _book_time_id;
	
	private System.Nullable<decimal> _price;
	
	private EntityRef<tbBookTime> _tbBookTime;
	
	private EntityRef<tbFieldType> _tbFieldType;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onprice_idChanging(int value);
    partial void Onprice_idChanged();
    partial void Onfield_type_idChanging(System.Nullable<int> value);
    partial void Onfield_type_idChanged();
    partial void Onbook_time_idChanging(System.Nullable<int> value);
    partial void Onbook_time_idChanged();
    partial void OnpriceChanging(System.Nullable<decimal> value);
    partial void OnpriceChanged();
    #endregion
	
	public tbPrice()
	{
		this._tbBookTime = default(EntityRef<tbBookTime>);
		this._tbFieldType = default(EntityRef<tbFieldType>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int price_id
	{
		get
		{
			return this._price_id;
		}
		set
		{
			if ((this._price_id != value))
			{
				this.Onprice_idChanging(value);
				this.SendPropertyChanging();
				this._price_id = value;
				this.SendPropertyChanged("price_id");
				this.Onprice_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_field_type_id", DbType="Int")]
	public System.Nullable<int> field_type_id
	{
		get
		{
			return this._field_type_id;
		}
		set
		{
			if ((this._field_type_id != value))
			{
				if (this._tbFieldType.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onfield_type_idChanging(value);
				this.SendPropertyChanging();
				this._field_type_id = value;
				this.SendPropertyChanged("field_type_id");
				this.Onfield_type_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_time_id", DbType="Int")]
	public System.Nullable<int> book_time_id
	{
		get
		{
			return this._book_time_id;
		}
		set
		{
			if ((this._book_time_id != value))
			{
				if (this._tbBookTime.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onbook_time_idChanging(value);
				this.SendPropertyChanging();
				this._book_time_id = value;
				this.SendPropertyChanged("book_time_id");
				this.Onbook_time_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Money")]
	public System.Nullable<decimal> price
	{
		get
		{
			return this._price;
		}
		set
		{
			if ((this._price != value))
			{
				this.OnpriceChanging(value);
				this.SendPropertyChanging();
				this._price = value;
				this.SendPropertyChanged("price");
				this.OnpriceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbBookTime_tbPrice", Storage="_tbBookTime", ThisKey="book_time_id", OtherKey="book_time_id", IsForeignKey=true, DeleteRule="CASCADE")]
	public tbBookTime tbBookTime
	{
		get
		{
			return this._tbBookTime.Entity;
		}
		set
		{
			tbBookTime previousValue = this._tbBookTime.Entity;
			if (((previousValue != value) 
						|| (this._tbBookTime.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tbBookTime.Entity = null;
					previousValue.tbPrices.Remove(this);
				}
				this._tbBookTime.Entity = value;
				if ((value != null))
				{
					value.tbPrices.Add(this);
					this._book_time_id = value.book_time_id;
				}
				else
				{
					this._book_time_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("tbBookTime");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbFieldType_tbPrice", Storage="_tbFieldType", ThisKey="field_type_id", OtherKey="field_type_id", IsForeignKey=true, DeleteRule="CASCADE")]
	public tbFieldType tbFieldType
	{
		get
		{
			return this._tbFieldType.Entity;
		}
		set
		{
			tbFieldType previousValue = this._tbFieldType.Entity;
			if (((previousValue != value) 
						|| (this._tbFieldType.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tbFieldType.Entity = null;
					previousValue.tbPrices.Remove(this);
				}
				this._tbFieldType.Entity = value;
				if ((value != null))
				{
					value.tbPrices.Add(this);
					this._field_type_id = value.field_type_id;
				}
				else
				{
					this._field_type_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("tbFieldType");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbShoes")]
public partial class tbShoe : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _shoes_id;
	
	private string _shoes_name;
	
	private System.Nullable<decimal> _shoes_price;
	
	private System.Nullable<int> _shoes_size;
	
	private string _shoes_color;
	
	private string _shoes_description;
	
	private string _picture;
	
	private System.Nullable<int> _quantity;
	
	private EntitySet<tbBill> _tbBills;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onshoes_idChanging(string value);
    partial void Onshoes_idChanged();
    partial void Onshoes_nameChanging(string value);
    partial void Onshoes_nameChanged();
    partial void Onshoes_priceChanging(System.Nullable<decimal> value);
    partial void Onshoes_priceChanged();
    partial void Onshoes_sizeChanging(System.Nullable<int> value);
    partial void Onshoes_sizeChanged();
    partial void Onshoes_colorChanging(string value);
    partial void Onshoes_colorChanged();
    partial void Onshoes_descriptionChanging(string value);
    partial void Onshoes_descriptionChanged();
    partial void OnpictureChanging(string value);
    partial void OnpictureChanged();
    partial void OnquantityChanging(System.Nullable<int> value);
    partial void OnquantityChanged();
    #endregion
	
	public tbShoe()
	{
		this._tbBills = new EntitySet<tbBill>(new Action<tbBill>(this.attach_tbBills), new Action<tbBill>(this.detach_tbBills));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shoes_id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string shoes_id
	{
		get
		{
			return this._shoes_id;
		}
		set
		{
			if ((this._shoes_id != value))
			{
				this.Onshoes_idChanging(value);
				this.SendPropertyChanging();
				this._shoes_id = value;
				this.SendPropertyChanged("shoes_id");
				this.Onshoes_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shoes_name", DbType="NVarChar(MAX)")]
	public string shoes_name
	{
		get
		{
			return this._shoes_name;
		}
		set
		{
			if ((this._shoes_name != value))
			{
				this.Onshoes_nameChanging(value);
				this.SendPropertyChanging();
				this._shoes_name = value;
				this.SendPropertyChanged("shoes_name");
				this.Onshoes_nameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shoes_price", DbType="Money")]
	public System.Nullable<decimal> shoes_price
	{
		get
		{
			return this._shoes_price;
		}
		set
		{
			if ((this._shoes_price != value))
			{
				this.Onshoes_priceChanging(value);
				this.SendPropertyChanging();
				this._shoes_price = value;
				this.SendPropertyChanged("shoes_price");
				this.Onshoes_priceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shoes_size", DbType="Int")]
	public System.Nullable<int> shoes_size
	{
		get
		{
			return this._shoes_size;
		}
		set
		{
			if ((this._shoes_size != value))
			{
				this.Onshoes_sizeChanging(value);
				this.SendPropertyChanging();
				this._shoes_size = value;
				this.SendPropertyChanged("shoes_size");
				this.Onshoes_sizeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shoes_color", DbType="NVarChar(MAX)")]
	public string shoes_color
	{
		get
		{
			return this._shoes_color;
		}
		set
		{
			if ((this._shoes_color != value))
			{
				this.Onshoes_colorChanging(value);
				this.SendPropertyChanging();
				this._shoes_color = value;
				this.SendPropertyChanged("shoes_color");
				this.Onshoes_colorChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shoes_description", DbType="NVarChar(MAX)")]
	public string shoes_description
	{
		get
		{
			return this._shoes_description;
		}
		set
		{
			if ((this._shoes_description != value))
			{
				this.Onshoes_descriptionChanging(value);
				this.SendPropertyChanging();
				this._shoes_description = value;
				this.SendPropertyChanged("shoes_description");
				this.Onshoes_descriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_picture", DbType="NVarChar(MAX)")]
	public string picture
	{
		get
		{
			return this._picture;
		}
		set
		{
			if ((this._picture != value))
			{
				this.OnpictureChanging(value);
				this.SendPropertyChanging();
				this._picture = value;
				this.SendPropertyChanged("picture");
				this.OnpictureChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int")]
	public System.Nullable<int> quantity
	{
		get
		{
			return this._quantity;
		}
		set
		{
			if ((this._quantity != value))
			{
				this.OnquantityChanging(value);
				this.SendPropertyChanging();
				this._quantity = value;
				this.SendPropertyChanged("quantity");
				this.OnquantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbShoe_tbBill", Storage="_tbBills", ThisKey="shoes_id", OtherKey="shoes_id")]
	public EntitySet<tbBill> tbBills
	{
		get
		{
			return this._tbBills;
		}
		set
		{
			this._tbBills.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_tbBills(tbBill entity)
	{
		this.SendPropertyChanging();
		entity.tbShoe = this;
	}
	
	private void detach_tbBills(tbBill entity)
	{
		this.SendPropertyChanging();
		entity.tbShoe = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbTempTransactionAdmin")]
public partial class tbTempTransactionAdmin : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _temp_transaction_id;
	
	private System.Nullable<int> _field_id;
	
	private System.Nullable<int> _users_id;
	
	private System.Nullable<int> _book_time_id;
	
	private EntitySet<tbTransaction> _tbTransactions;
	
	private EntityRef<tbBookTime> _tbBookTime;
	
	private EntityRef<tbField> _tbField;
	
	private EntityRef<tbUser> _tbUser;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontemp_transaction_idChanging(int value);
    partial void Ontemp_transaction_idChanged();
    partial void Onfield_idChanging(System.Nullable<int> value);
    partial void Onfield_idChanged();
    partial void Onusers_idChanging(System.Nullable<int> value);
    partial void Onusers_idChanged();
    partial void Onbook_time_idChanging(System.Nullable<int> value);
    partial void Onbook_time_idChanged();
    #endregion
	
	public tbTempTransactionAdmin()
	{
		this._tbTransactions = new EntitySet<tbTransaction>(new Action<tbTransaction>(this.attach_tbTransactions), new Action<tbTransaction>(this.detach_tbTransactions));
		this._tbBookTime = default(EntityRef<tbBookTime>);
		this._tbField = default(EntityRef<tbField>);
		this._tbUser = default(EntityRef<tbUser>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_temp_transaction_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int temp_transaction_id
	{
		get
		{
			return this._temp_transaction_id;
		}
		set
		{
			if ((this._temp_transaction_id != value))
			{
				this.Ontemp_transaction_idChanging(value);
				this.SendPropertyChanging();
				this._temp_transaction_id = value;
				this.SendPropertyChanged("temp_transaction_id");
				this.Ontemp_transaction_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_field_id", DbType="Int")]
	public System.Nullable<int> field_id
	{
		get
		{
			return this._field_id;
		}
		set
		{
			if ((this._field_id != value))
			{
				if (this._tbField.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onfield_idChanging(value);
				this.SendPropertyChanging();
				this._field_id = value;
				this.SendPropertyChanged("field_id");
				this.Onfield_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_users_id", DbType="Int")]
	public System.Nullable<int> users_id
	{
		get
		{
			return this._users_id;
		}
		set
		{
			if ((this._users_id != value))
			{
				if (this._tbUser.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onusers_idChanging(value);
				this.SendPropertyChanging();
				this._users_id = value;
				this.SendPropertyChanged("users_id");
				this.Onusers_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_time_id", DbType="Int")]
	public System.Nullable<int> book_time_id
	{
		get
		{
			return this._book_time_id;
		}
		set
		{
			if ((this._book_time_id != value))
			{
				if (this._tbBookTime.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onbook_time_idChanging(value);
				this.SendPropertyChanging();
				this._book_time_id = value;
				this.SendPropertyChanged("book_time_id");
				this.Onbook_time_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbTempTransactionAdmin_tbTransaction", Storage="_tbTransactions", ThisKey="temp_transaction_id", OtherKey="temp_transaction_id")]
	public EntitySet<tbTransaction> tbTransactions
	{
		get
		{
			return this._tbTransactions;
		}
		set
		{
			this._tbTransactions.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbBookTime_tbTempTransactionAdmin", Storage="_tbBookTime", ThisKey="book_time_id", OtherKey="book_time_id", IsForeignKey=true, DeleteRule="CASCADE")]
	public tbBookTime tbBookTime
	{
		get
		{
			return this._tbBookTime.Entity;
		}
		set
		{
			tbBookTime previousValue = this._tbBookTime.Entity;
			if (((previousValue != value) 
						|| (this._tbBookTime.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tbBookTime.Entity = null;
					previousValue.tbTempTransactionAdmins.Remove(this);
				}
				this._tbBookTime.Entity = value;
				if ((value != null))
				{
					value.tbTempTransactionAdmins.Add(this);
					this._book_time_id = value.book_time_id;
				}
				else
				{
					this._book_time_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("tbBookTime");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbField_tbTempTransactionAdmin", Storage="_tbField", ThisKey="field_id", OtherKey="field_id", IsForeignKey=true, DeleteRule="CASCADE")]
	public tbField tbField
	{
		get
		{
			return this._tbField.Entity;
		}
		set
		{
			tbField previousValue = this._tbField.Entity;
			if (((previousValue != value) 
						|| (this._tbField.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tbField.Entity = null;
					previousValue.tbTempTransactionAdmins.Remove(this);
				}
				this._tbField.Entity = value;
				if ((value != null))
				{
					value.tbTempTransactionAdmins.Add(this);
					this._field_id = value.field_id;
				}
				else
				{
					this._field_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("tbField");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbUser_tbTempTransactionAdmin", Storage="_tbUser", ThisKey="users_id", OtherKey="users_id", IsForeignKey=true, DeleteRule="CASCADE")]
	public tbUser tbUser
	{
		get
		{
			return this._tbUser.Entity;
		}
		set
		{
			tbUser previousValue = this._tbUser.Entity;
			if (((previousValue != value) 
						|| (this._tbUser.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tbUser.Entity = null;
					previousValue.tbTempTransactionAdmins.Remove(this);
				}
				this._tbUser.Entity = value;
				if ((value != null))
				{
					value.tbTempTransactionAdmins.Add(this);
					this._users_id = value.users_id;
				}
				else
				{
					this._users_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("tbUser");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_tbTransactions(tbTransaction entity)
	{
		this.SendPropertyChanging();
		entity.tbTempTransactionAdmin = this;
	}
	
	private void detach_tbTransactions(tbTransaction entity)
	{
		this.SendPropertyChanging();
		entity.tbTempTransactionAdmin = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbTempTransactionCustomer")]
public partial class tbTempTransactionCustomer : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _temp_transaction_id;
	
	private System.Nullable<int> _field_id;
	
	private System.Nullable<int> _users_id;
	
	private System.Nullable<int> _book_time_id;
	
	private EntityRef<tbBookTime> _tbBookTime;
	
	private EntityRef<tbField> _tbField;
	
	private EntityRef<tbUser> _tbUser;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontemp_transaction_idChanging(int value);
    partial void Ontemp_transaction_idChanged();
    partial void Onfield_idChanging(System.Nullable<int> value);
    partial void Onfield_idChanged();
    partial void Onusers_idChanging(System.Nullable<int> value);
    partial void Onusers_idChanged();
    partial void Onbook_time_idChanging(System.Nullable<int> value);
    partial void Onbook_time_idChanged();
    #endregion
	
	public tbTempTransactionCustomer()
	{
		this._tbBookTime = default(EntityRef<tbBookTime>);
		this._tbField = default(EntityRef<tbField>);
		this._tbUser = default(EntityRef<tbUser>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_temp_transaction_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int temp_transaction_id
	{
		get
		{
			return this._temp_transaction_id;
		}
		set
		{
			if ((this._temp_transaction_id != value))
			{
				this.Ontemp_transaction_idChanging(value);
				this.SendPropertyChanging();
				this._temp_transaction_id = value;
				this.SendPropertyChanged("temp_transaction_id");
				this.Ontemp_transaction_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_field_id", DbType="Int")]
	public System.Nullable<int> field_id
	{
		get
		{
			return this._field_id;
		}
		set
		{
			if ((this._field_id != value))
			{
				if (this._tbField.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onfield_idChanging(value);
				this.SendPropertyChanging();
				this._field_id = value;
				this.SendPropertyChanged("field_id");
				this.Onfield_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_users_id", DbType="Int")]
	public System.Nullable<int> users_id
	{
		get
		{
			return this._users_id;
		}
		set
		{
			if ((this._users_id != value))
			{
				if (this._tbUser.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onusers_idChanging(value);
				this.SendPropertyChanging();
				this._users_id = value;
				this.SendPropertyChanged("users_id");
				this.Onusers_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_book_time_id", DbType="Int")]
	public System.Nullable<int> book_time_id
	{
		get
		{
			return this._book_time_id;
		}
		set
		{
			if ((this._book_time_id != value))
			{
				if (this._tbBookTime.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Onbook_time_idChanging(value);
				this.SendPropertyChanging();
				this._book_time_id = value;
				this.SendPropertyChanged("book_time_id");
				this.Onbook_time_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbBookTime_tbTempTransactionCustomer", Storage="_tbBookTime", ThisKey="book_time_id", OtherKey="book_time_id", IsForeignKey=true, DeleteRule="CASCADE")]
	public tbBookTime tbBookTime
	{
		get
		{
			return this._tbBookTime.Entity;
		}
		set
		{
			tbBookTime previousValue = this._tbBookTime.Entity;
			if (((previousValue != value) 
						|| (this._tbBookTime.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tbBookTime.Entity = null;
					previousValue.tbTempTransactionCustomers.Remove(this);
				}
				this._tbBookTime.Entity = value;
				if ((value != null))
				{
					value.tbTempTransactionCustomers.Add(this);
					this._book_time_id = value.book_time_id;
				}
				else
				{
					this._book_time_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("tbBookTime");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbField_tbTempTransactionCustomer", Storage="_tbField", ThisKey="field_id", OtherKey="field_id", IsForeignKey=true, DeleteRule="CASCADE")]
	public tbField tbField
	{
		get
		{
			return this._tbField.Entity;
		}
		set
		{
			tbField previousValue = this._tbField.Entity;
			if (((previousValue != value) 
						|| (this._tbField.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tbField.Entity = null;
					previousValue.tbTempTransactionCustomers.Remove(this);
				}
				this._tbField.Entity = value;
				if ((value != null))
				{
					value.tbTempTransactionCustomers.Add(this);
					this._field_id = value.field_id;
				}
				else
				{
					this._field_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("tbField");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbUser_tbTempTransactionCustomer", Storage="_tbUser", ThisKey="users_id", OtherKey="users_id", IsForeignKey=true, DeleteRule="CASCADE")]
	public tbUser tbUser
	{
		get
		{
			return this._tbUser.Entity;
		}
		set
		{
			tbUser previousValue = this._tbUser.Entity;
			if (((previousValue != value) 
						|| (this._tbUser.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tbUser.Entity = null;
					previousValue.tbTempTransactionCustomers.Remove(this);
				}
				this._tbUser.Entity = value;
				if ((value != null))
				{
					value.tbTempTransactionCustomers.Add(this);
					this._users_id = value.users_id;
				}
				else
				{
					this._users_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("tbUser");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbUsers")]
public partial class tbUser : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _users_id;
	
	private string _users_fullname;
	
	private string _users_phoneNumber;
	
	private string _users_email;
	
	private string _users_address;
	
	private string _users_identity;
	
	private string _users_account;
	
	private string _users_password;
	
	private System.Nullable<int> _group_user_id;
	
	private System.Nullable<bool> _users_status;
	
	private EntitySet<tbBill> _tbBills;
	
	private EntitySet<tbTempTransactionAdmin> _tbTempTransactionAdmins;
	
	private EntitySet<tbTempTransactionCustomer> _tbTempTransactionCustomers;
	
	private EntityRef<tbGroupUser> _tbGroupUser;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onusers_idChanging(int value);
    partial void Onusers_idChanged();
    partial void Onusers_fullnameChanging(string value);
    partial void Onusers_fullnameChanged();
    partial void Onusers_phoneNumberChanging(string value);
    partial void Onusers_phoneNumberChanged();
    partial void Onusers_emailChanging(string value);
    partial void Onusers_emailChanged();
    partial void Onusers_addressChanging(string value);
    partial void Onusers_addressChanged();
    partial void Onusers_identityChanging(string value);
    partial void Onusers_identityChanged();
    partial void Onusers_accountChanging(string value);
    partial void Onusers_accountChanged();
    partial void Onusers_passwordChanging(string value);
    partial void Onusers_passwordChanged();
    partial void Ongroup_user_idChanging(System.Nullable<int> value);
    partial void Ongroup_user_idChanged();
    partial void Onusers_statusChanging(System.Nullable<bool> value);
    partial void Onusers_statusChanged();
    #endregion
	
	public tbUser()
	{
		this._tbBills = new EntitySet<tbBill>(new Action<tbBill>(this.attach_tbBills), new Action<tbBill>(this.detach_tbBills));
		this._tbTempTransactionAdmins = new EntitySet<tbTempTransactionAdmin>(new Action<tbTempTransactionAdmin>(this.attach_tbTempTransactionAdmins), new Action<tbTempTransactionAdmin>(this.detach_tbTempTransactionAdmins));
		this._tbTempTransactionCustomers = new EntitySet<tbTempTransactionCustomer>(new Action<tbTempTransactionCustomer>(this.attach_tbTempTransactionCustomers), new Action<tbTempTransactionCustomer>(this.detach_tbTempTransactionCustomers));
		this._tbGroupUser = default(EntityRef<tbGroupUser>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_users_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int users_id
	{
		get
		{
			return this._users_id;
		}
		set
		{
			if ((this._users_id != value))
			{
				this.Onusers_idChanging(value);
				this.SendPropertyChanging();
				this._users_id = value;
				this.SendPropertyChanged("users_id");
				this.Onusers_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_users_fullname", DbType="NVarChar(MAX)")]
	public string users_fullname
	{
		get
		{
			return this._users_fullname;
		}
		set
		{
			if ((this._users_fullname != value))
			{
				this.Onusers_fullnameChanging(value);
				this.SendPropertyChanging();
				this._users_fullname = value;
				this.SendPropertyChanged("users_fullname");
				this.Onusers_fullnameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_users_phoneNumber", DbType="VarChar(13)")]
	public string users_phoneNumber
	{
		get
		{
			return this._users_phoneNumber;
		}
		set
		{
			if ((this._users_phoneNumber != value))
			{
				this.Onusers_phoneNumberChanging(value);
				this.SendPropertyChanging();
				this._users_phoneNumber = value;
				this.SendPropertyChanged("users_phoneNumber");
				this.Onusers_phoneNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_users_email", DbType="NVarChar(50)")]
	public string users_email
	{
		get
		{
			return this._users_email;
		}
		set
		{
			if ((this._users_email != value))
			{
				this.Onusers_emailChanging(value);
				this.SendPropertyChanging();
				this._users_email = value;
				this.SendPropertyChanged("users_email");
				this.Onusers_emailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_users_address", DbType="NVarChar(MAX)")]
	public string users_address
	{
		get
		{
			return this._users_address;
		}
		set
		{
			if ((this._users_address != value))
			{
				this.Onusers_addressChanging(value);
				this.SendPropertyChanging();
				this._users_address = value;
				this.SendPropertyChanged("users_address");
				this.Onusers_addressChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_users_identity", DbType="VarChar(13)")]
	public string users_identity
	{
		get
		{
			return this._users_identity;
		}
		set
		{
			if ((this._users_identity != value))
			{
				this.Onusers_identityChanging(value);
				this.SendPropertyChanging();
				this._users_identity = value;
				this.SendPropertyChanged("users_identity");
				this.Onusers_identityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_users_account", DbType="VarChar(MAX)")]
	public string users_account
	{
		get
		{
			return this._users_account;
		}
		set
		{
			if ((this._users_account != value))
			{
				this.Onusers_accountChanging(value);
				this.SendPropertyChanging();
				this._users_account = value;
				this.SendPropertyChanged("users_account");
				this.Onusers_accountChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_users_password", DbType="VarChar(MAX)")]
	public string users_password
	{
		get
		{
			return this._users_password;
		}
		set
		{
			if ((this._users_password != value))
			{
				this.Onusers_passwordChanging(value);
				this.SendPropertyChanging();
				this._users_password = value;
				this.SendPropertyChanged("users_password");
				this.Onusers_passwordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_group_user_id", DbType="Int")]
	public System.Nullable<int> group_user_id
	{
		get
		{
			return this._group_user_id;
		}
		set
		{
			if ((this._group_user_id != value))
			{
				if (this._tbGroupUser.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.Ongroup_user_idChanging(value);
				this.SendPropertyChanging();
				this._group_user_id = value;
				this.SendPropertyChanged("group_user_id");
				this.Ongroup_user_idChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_users_status", DbType="Bit")]
	public System.Nullable<bool> users_status
	{
		get
		{
			return this._users_status;
		}
		set
		{
			if ((this._users_status != value))
			{
				this.Onusers_statusChanging(value);
				this.SendPropertyChanging();
				this._users_status = value;
				this.SendPropertyChanged("users_status");
				this.Onusers_statusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbUser_tbBill", Storage="_tbBills", ThisKey="users_id", OtherKey="users_id")]
	public EntitySet<tbBill> tbBills
	{
		get
		{
			return this._tbBills;
		}
		set
		{
			this._tbBills.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbUser_tbTempTransactionAdmin", Storage="_tbTempTransactionAdmins", ThisKey="users_id", OtherKey="users_id")]
	public EntitySet<tbTempTransactionAdmin> tbTempTransactionAdmins
	{
		get
		{
			return this._tbTempTransactionAdmins;
		}
		set
		{
			this._tbTempTransactionAdmins.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbUser_tbTempTransactionCustomer", Storage="_tbTempTransactionCustomers", ThisKey="users_id", OtherKey="users_id")]
	public EntitySet<tbTempTransactionCustomer> tbTempTransactionCustomers
	{
		get
		{
			return this._tbTempTransactionCustomers;
		}
		set
		{
			this._tbTempTransactionCustomers.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbGroupUser_tbUser", Storage="_tbGroupUser", ThisKey="group_user_id", OtherKey="group_user_id", IsForeignKey=true, DeleteRule="CASCADE")]
	public tbGroupUser tbGroupUser
	{
		get
		{
			return this._tbGroupUser.Entity;
		}
		set
		{
			tbGroupUser previousValue = this._tbGroupUser.Entity;
			if (((previousValue != value) 
						|| (this._tbGroupUser.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tbGroupUser.Entity = null;
					previousValue.tbUsers.Remove(this);
				}
				this._tbGroupUser.Entity = value;
				if ((value != null))
				{
					value.tbUsers.Add(this);
					this._group_user_id = value.group_user_id;
				}
				else
				{
					this._group_user_id = default(Nullable<int>);
				}
				this.SendPropertyChanged("tbGroupUser");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_tbBills(tbBill entity)
	{
		this.SendPropertyChanging();
		entity.tbUser = this;
	}
	
	private void detach_tbBills(tbBill entity)
	{
		this.SendPropertyChanging();
		entity.tbUser = null;
	}
	
	private void attach_tbTempTransactionAdmins(tbTempTransactionAdmin entity)
	{
		this.SendPropertyChanging();
		entity.tbUser = this;
	}
	
	private void detach_tbTempTransactionAdmins(tbTempTransactionAdmin entity)
	{
		this.SendPropertyChanging();
		entity.tbUser = null;
	}
	
	private void attach_tbTempTransactionCustomers(tbTempTransactionCustomer entity)
	{
		this.SendPropertyChanging();
		entity.tbUser = this;
	}
	
	private void detach_tbTempTransactionCustomers(tbTempTransactionCustomer entity)
	{
		this.SendPropertyChanging();
		entity.tbUser = null;
	}
}
#pragma warning restore 1591
